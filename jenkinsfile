pipeline {
    agent any

    environment {
        DOCKER_IMAGE_NAME = 'odaudu/ms1_app' // Update 'your-image-name' with your desired image name
        GITHUB_REPO_URL = 'https://github.com/ODEJO6219/ms1_app.git'
    }

    stages {
        stage('Git Checkout') {
            steps {
                script {
                    echo 'Checking out code from GitHub repository'
                }
                // Clone the GitHub repository and specify the correct branch
                git credentialsId: 'github-credentials', url: env.GITHUB_REPO_URL, branch: 'main' // Ensure 'main' is the correct branch
                script {
                    echo 'Listing workspace files for debugging'
                    sh 'ls -la'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    echo 'Building Docker image'
                    // Build Docker image using Dockerfile in the root directory
                    docker.build(env.DOCKER_IMAGE_NAME, '-f Dockerfile .')
                }
            }
        }

        stage('Push Docker Image to Docker Hub') {
            steps {
                script {
                    echo 'Pushing Docker image to Docker Hub'
                }
                withCredentials([usernamePassword(credentialsId: 'dockerhub-repo', usernameVariable: 'DOCKERHUB_USER', passwordVariable: 'DOCKERHUB_PASS')]) {
                    script {
                        sh "echo ${DOCKERHUB_PASS} | docker login -u ${DOCKERHUB_USER} --password-stdin https://registry.hub.docker.com"
                        docker.withRegistry('https://registry.hub.docker.com', 'dockerhub-repo') {
                            // Push Docker image to Docker Hub
                            docker.image(env.DOCKER_IMAGE_NAME).push('latest')
                        }
                    }
                }
            }
        }
    }

    post {
        failure {
            echo 'Pipeline failed.'
        }
        success {
            echo 'Pipeline succeeded.'
        }
    }
}
